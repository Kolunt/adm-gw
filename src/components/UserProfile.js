import React, { useState, useEffect, useCallback } from 'react';
import { Card, Typography, Button, Space, Tag, Divider, Row, Col, message, Form, Input } from 'antd';
import { EditOutlined, SaveOutlined, CloseOutlined } from '@ant-design/icons';
import axios from 'axios';
import UserAvatar from './UserAvatar';

const { Title, Text } = Typography;

function UserProfile() {
  const [user, setUser] = useState(null);
  const [loading, setLoading] = useState(true);
  const [editing, setEditing] = useState(false);
  const [form] = Form.useForm();

  const fetchUserProfile = useCallback(async () => {
    try {
      const token = localStorage.getItem('token');
      const response = await axios.get('/auth/me', {
        headers: { Authorization: `Bearer ${token}` }
      });
      setUser(response.data);
      form.setFieldsValue({
        name: response.data.name,
        email: response.data.email,
        gwars_profile_url: response.data.gwars_profile_url,
        full_name: response.data.full_name,
        address: response.data.address,
        interests: response.data.interests
      });
    } catch (error) {
      message.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –ø—Ä–æ—Ñ–∏–ª—è');
      console.error('Error fetching user profile:', error);
    } finally {
      setLoading(false);
    }
  }, [form]);

  useEffect(() => {
    fetchUserProfile();
  }, [fetchUserProfile]);

  const handleEdit = () => {
    setEditing(true);
  };

  const handleCancel = () => {
    setEditing(false);
    form.resetFields();
  };

  const handleSave = async (values) => {
    try {
      const token = localStorage.getItem('token');
      await axios.put('/auth/profile', values, {
        headers: { Authorization: `Bearer ${token}` }
      });
      message.success('–ü—Ä–æ—Ñ–∏–ª—å –æ–±–Ω–æ–≤–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ');
      setEditing(false);
      fetchUserProfile();
    } catch (error) {
      message.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –ø—Ä–æ—Ñ–∏–ª—è');
      console.error('Error updating profile:', error);
    }
  };

  if (loading) {
    return (
      <Card loading={true}>
        <Title level={3}>–ó–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–æ—Ñ–∏–ª—è...</Title>
      </Card>
    );
  }

  if (!user) {
    return (
      <Card>
        <Title level={3}>–ü—Ä–æ—Ñ–∏–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω</Title>
        <Text type="secondary">–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –ø—Ä–æ—Ñ–∏–ª—è</Text>
      </Card>
    );
  }

  return (
    <div style={{ maxWidth: '800px', margin: '0 auto' }}>
      <Card>
        <div style={{ textAlign: 'center', marginBottom: '30px' }}>
          <UserAvatar 
            user={user}
            size={80} 
            style={{ marginBottom: '16px' }}
            showTooltip={true}
          />
          <Title level={2} style={{ color: '#d63031', marginBottom: '8px' }}>
            {user.name}
          </Title>
          <Text type="secondary" style={{ fontSize: '16px' }}>
            {user.email}
          </Text>
          <div style={{ marginTop: '12px' }}>
            <Tag color={user.role === 'admin' ? 'red' : 'blue'}>
              {user.role === 'admin' ? '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä' : '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å'}
            </Tag>
            <Tag color={user.profile_completed ? 'green' : 'orange'}>
              {user.profile_completed ? '–ü—Ä–æ—Ñ–∏–ª—å –∑–∞–≤–µ—Ä—à–µ–Ω' : '–ü—Ä–æ—Ñ–∏–ª—å –Ω–µ –∑–∞–≤–µ—Ä—à–µ–Ω'}
            </Tag>
          </div>
        </div>

        <Divider />

        {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ GWars –ø—Ä–æ—Ñ–∏–ª–µ */}
        {user.gwars_profile_url && (
          <div style={{ marginBottom: '24px' }}>
            <Title level={4} style={{ color: '#1890ff', marginBottom: '16px' }}>
              üéÆ –ü—Ä–æ—Ñ–∏–ª—å GWars.io
            </Title>
            <Row gutter={[16, 16]}>
              <Col xs={24} sm={12}>
                <div style={{ padding: '12px', backgroundColor: '#f0f2f5', borderRadius: '6px' }}>
                  <Text strong>–ù–∏–∫–Ω–µ–π–º:</Text>
                  <br />
                  <Text>{user.gwars_nickname || '–ù–µ —É–∫–∞–∑–∞–Ω'}</Text>
                </div>
              </Col>
              <Col xs={24} sm={12}>
                <div style={{ padding: '12px', backgroundColor: '#f0f2f5', borderRadius: '6px' }}>
                  <Text strong>–°—Ç–∞—Ç—É—Å –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏:</Text>
                  <br />
                  <Tag color={user.gwars_verified ? 'green' : 'red'}>
                    {user.gwars_verified ? '–í–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω' : '–ù–µ –≤–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω'}
                  </Tag>
                </div>
              </Col>
              <Col xs={24}>
                <div style={{ padding: '12px', backgroundColor: '#f0f2f5', borderRadius: '6px' }}>
                  <Text strong>–°—Å—ã–ª–∫–∞ –Ω–∞ –ø—Ä–æ—Ñ–∏–ª—å:</Text>
                  <br />
                  <a 
                    href={user.gwars_profile_url} 
                    target="_blank" 
                    rel="noopener noreferrer"
                    style={{ color: '#1890ff' }}
                  >
                    {user.gwars_profile_url}
                  </a>
                </div>
              </Col>
            </Row>
          </div>
        )}

        <Form
          form={form}
          layout="vertical"
          onFinish={handleSave}
          disabled={!editing}
        >
          <Row gutter={[24, 16]}>
            <Col xs={24} sm={12}>
              <Form.Item
                name="name"
                label="–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"
                rules={[{ required: true, message: '–í–≤–µ–¥–∏—Ç–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è' }]}
              >
                <Input prefix={<UserOutlined />} />
              </Form.Item>
            </Col>
            <Col xs={24} sm={12}>
              <Form.Item
                name="email"
                label="Email"
                rules={[
                  { required: true, message: '–í–≤–µ–¥–∏—Ç–µ email' },
                  { type: 'email', message: '–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π email' }
                ]}
              >
                <Input />
              </Form.Item>
            </Col>
          </Row>

          <Row gutter={[24, 16]}>
            <Col xs={24}>
              <Form.Item
                name="gwars_profile_url"
                label="–°—Å—ã–ª–∫–∞ –Ω–∞ –ø—Ä–æ—Ñ–∏–ª—å GWars.io"
              >
                <Input placeholder="https://www.gwars.io/info.php?id=..." />
              </Form.Item>
            </Col>
          </Row>

          <Row gutter={[24, 16]}>
            <Col xs={24} sm={12}>
              <Form.Item
                name="full_name"
                label="–ü–æ–ª–Ω–æ–µ –∏–º—è"
              >
                <Input placeholder="–ò–≤–∞–Ω–æ–≤ –ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤–∏—á" />
              </Form.Item>
            </Col>
            <Col xs={24} sm={12}>
              <Form.Item
                name="address"
                label="–ê–¥—Ä–µ—Å"
              >
                <Input placeholder="–≥. –ú–æ—Å–∫–≤–∞, —É–ª. –ü—Ä–∏–º–µ—Ä–Ω–∞—è, –¥. 1" />
              </Form.Item>
            </Col>
          </Row>

          <Row gutter={[24, 16]}>
            <Col xs={24}>
              <Form.Item
                name="interests"
                label="–ò–Ω—Ç–µ—Ä–µ—Å—ã"
              >
                <Input.TextArea 
                  rows={4} 
                  placeholder="–†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –æ —Å–≤–æ–∏—Ö –∏–Ω—Ç–µ—Ä–µ—Å–∞—Ö..."
                />
              </Form.Item>
            </Col>
          </Row>

          <Divider />

          <div style={{ textAlign: 'center' }}>
            <Space size="middle">
              {editing ? (
                <>
                  <Button 
                    type="primary" 
                    htmlType="submit"
                    icon={<SaveOutlined />}
                  >
                    –°–æ—Ö—Ä–∞–Ω–∏—Ç—å
                  </Button>
                  <Button 
                    onClick={handleCancel}
                    icon={<CloseOutlined />}
                  >
                    –û—Ç–º–µ–Ω–∞
                  </Button>
                </>
              ) : (
                <Button 
                  type="primary" 
                  onClick={handleEdit}
                  icon={<EditOutlined />}
                >
                  –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ—Ñ–∏–ª—å
                </Button>
              )}
            </Space>
          </div>
        </Form>

        <Divider />

        <div>
          <Title level={4}>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —É—á–∞—Å—Ç–∏—è</Title>
          <Row gutter={[16, 16]}>
            <Col xs={24} sm={8}>
              <Card size="small" style={{ textAlign: 'center' }}>
                <Title level={3} style={{ color: '#1890ff', margin: 0 }}>0</Title>
                <Text type="secondary">–ú–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π</Text>
              </Card>
            </Col>
            <Col xs={24} sm={8}>
              <Card size="small" style={{ textAlign: 'center' }}>
                <Title level={3} style={{ color: '#52c41a', margin: 0 }}>0</Title>
                <Text type="secondary">–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–π</Text>
              </Card>
            </Col>
            <Col xs={24} sm={8}>
              <Card size="small" style={{ textAlign: 'center' }}>
                <Title level={3} style={{ color: '#fa8c16', margin: 0 }}>0</Title>
                <Text type="secondary">–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–π</Text>
              </Card>
            </Col>
          </Row>
        </div>
      </Card>
    </div>
  );
}

export default UserProfile;
