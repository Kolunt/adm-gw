import { useState, useEffect } from 'react';
import axios from 'axios';

/**
 * –•—É–∫ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫ —Å–∏—Å—Ç–µ–º—ã
 * @returns {Object} - –û–±—ä–µ–∫—Ç —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ –∏ —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º –∑–∞–≥—Ä—É–∑–∫–∏
 */
export const useSystemSettings = () => {
  const [settings, setSettings] = useState({});
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState(null);

  useEffect(() => {
    const fetchSettings = async () => {
      try {
        const response = await axios.get('/api/settings/public');
        const settingsData = {};
        response.data.forEach(setting => {
          settingsData[setting.key] = setting.value;
        });
        setSettings(settingsData);
      } catch (error) {
        console.error('Error fetching settings:', error);
        setError(error);
        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
        setSettings({
          welcome_title: 'üéÖ –ê–Ω–æ–Ω–∏–º–Ω—ã–π –î–µ–¥ –ú–æ—Ä–æ–∑',
          welcome_subtitle: '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Å–∏—Å—Ç–µ–º—É –æ–±–º–µ–Ω–∞ –ø–æ–¥–∞—Ä–∫–∞–º–∏!',
          site_title: '–ê–Ω–æ–Ω–∏–º–Ω—ã–π –î–µ–¥ –ú–æ—Ä–æ–∑',
          site_description: '–°–∏—Å—Ç–µ–º–∞ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ –∞–Ω–æ–Ω–∏–º–Ω–æ–≥–æ –æ–±–º–µ–Ω–∞ –ø–æ–¥–∞—Ä–∫–∞–º–∏'
        });
      } finally {
        setLoading(false);
      }
    };

    fetchSettings();
  }, []);

  return { settings, loading, error };
};
