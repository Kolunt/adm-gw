import requests
from datetime import datetime, timedelta

def test_events_api():
    print("=== –¢–µ—Å—Ç API –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π ===")
    
    # –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    login_data = {'email': 'admin@example.com', 'password': 'admin'}
    response = requests.post('http://localhost:8004/auth/login', json=login_data)
    
    if response.status_code != 200:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞: {response.text}")
        return False
    
    token = response.json()['access_token']
    headers = {'Authorization': f'Bearer {token}'}
    print("‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞")
    
    # –¢–µ—Å—Ç 1: –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π
    print("\n1. –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π...")
    response = requests.get('http://localhost:8004/events/', headers=headers)
    print(f"   –°—Ç–∞—Ç—É—Å: {response.status_code}")
    
    if response.status_code == 200:
        events = response.json()
        print(f"   ‚úÖ –ù–∞–π–¥–µ–Ω–æ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π: {len(events)}")
    else:
        print(f"   ‚ùå –û—à–∏–±–∫–∞: {response.text}")
        return False
    
    # –¢–µ—Å—Ç 2: –°–æ–∑–¥–∞–Ω–∏–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è
    print("\n2. –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è...")
    now = datetime.now()
    event_data = {
        'name': f'–ê–Ω–æ–Ω–∏–º–Ω—ã–π –î–µ–¥ –ú–æ—Ä–æ–∑ {now.year}',
        'description': '–ï–∂–µ–≥–æ–¥–Ω–æ–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ –æ–±–º–µ–Ω–∞ –ø–æ–¥–∞—Ä–∫–∞–º–∏',
        'preregistration_start': (now + timedelta(days=1)).isoformat(),
        'registration_start': (now + timedelta(days=7)).isoformat(),
        'registration_end': (now + timedelta(days=14)).isoformat()
    }
    
    response = requests.post('http://localhost:8004/events/', json=event_data, headers=headers)
    print(f"   –°—Ç–∞—Ç—É—Å: {response.status_code}")
    
    if response.status_code == 200:
        new_event = response.json()
        print(f"   ‚úÖ –°–æ–∑–¥–∞–Ω–æ: {new_event['name']} (ID: {new_event['id']})")
        return True
    else:
        print(f"   ‚ùå –û—à–∏–±–∫–∞: {response.text}")
        return False

if __name__ == "__main__":
    try:
        success = test_events_api()
        if success:
            print("\nüéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ!")
        else:
            print("\n‚ùå –¢–µ—Å—Ç—ã –Ω–µ –ø—Ä–æ—à–ª–∏")
    except Exception as e:
        print(f"\nüí• –û—à–∏–±–∫–∞: {e}")
