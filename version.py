#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤–µ—Ä—Å–∏—è–º–∏ –ø—Ä–æ–µ–∫—Ç–∞ –ê–Ω–æ–Ω–∏–º–Ω—ã–π –î–µ–¥ –ú–æ—Ä–æ–∑
"""

import os
import re
import sys
from pathlib import Path

def get_version():
    """–ü–æ–ª—É—á–∏—Ç—å —Ç–µ–∫—É—â—É—é –≤–µ—Ä—Å–∏—é –∏–∑ —Ñ–∞–π–ª–∞ VERSION"""
    version_file = Path("VERSION")
    if version_file.exists():
        return version_file.read_text().strip()
    return "0.0.1"

def increment_version():
    """–£–≤–µ–ª–∏—á–∏—Ç—å –≤–µ—Ä—Å–∏—é –Ω–∞ 1"""
    current_version = get_version()
    parts = current_version.split('.')
    
    # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω—é—é —á–∞—Å—Ç—å –≤–µ—Ä—Å–∏–∏
    parts[-1] = str(int(parts[-1]) + 1)
    new_version = '.'.join(parts)
    
    # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –Ω–æ–≤—É—é –≤–µ—Ä—Å–∏—é
    with open("VERSION", "w") as f:
        f.write(new_version)
    
    return new_version

def update_package_json(version):
    """–û–±–Ω–æ–≤–∏—Ç—å –≤–µ—Ä—Å–∏—é –≤ package.json"""
    package_json_path = Path("package.json")
    if package_json_path.exists():
        content = package_json_path.read_text(encoding='utf-8')
        # –ó–∞–º–µ–Ω—è–µ–º –≤–µ—Ä—Å–∏—é –≤ package.json
        content = re.sub(r'"version":\s*"[^"]*"', f'"version": "{version}"', content)
        package_json_path.write_text(content, encoding='utf-8')
        print(f"–û–±–Ω–æ–≤–ª–µ–Ω package.json –¥–æ –≤–µ—Ä—Å–∏–∏ {version}")

def update_backend_version(version):
    """–û–±–Ω–æ–≤–∏—Ç—å –≤–µ—Ä—Å–∏—é –≤ backend/main.py"""
    main_py_path = Path("backend/main.py")
    if main_py_path.exists():
        content = main_py_path.read_text(encoding='utf-8')
        # –ó–∞–º–µ–Ω—è–µ–º –≤–µ—Ä—Å–∏—é –≤ FastAPI app
        content = re.sub(r'version="[^"]*"', f'version="{version}"', content)
        main_py_path.write_text(content, encoding='utf-8')
        print(f"–û–±–Ω–æ–≤–ª–µ–Ω backend/main.py –¥–æ –≤–µ—Ä—Å–∏–∏ {version}")

def update_readme_version(version):
    """–û–±–Ω–æ–≤–∏—Ç—å –≤–µ—Ä—Å–∏—é –≤ README.md"""
    readme_path = Path("README.md")
    if readme_path.exists():
        content = readme_path.read_text(encoding='utf-8')
        # –ó–∞–º–µ–Ω—è–µ–º –≤–µ—Ä—Å–∏—é –≤ –∑–∞–≥–æ–ª–æ–≤–∫–µ
        content = re.sub(r'# üéÖ –ê–Ω–æ–Ω–∏–º–Ω—ã–π –î–µ–¥ –ú–æ—Ä–æ–∑ v\d+\.\d+\.\d+', f'# üéÖ –ê–Ω–æ–Ω–∏–º–Ω—ã–π –î–µ–¥ –ú–æ—Ä–æ–∑ v{version}', content)
        if not re.search(r'# üéÖ –ê–Ω–æ–Ω–∏–º–Ω—ã–π –î–µ–¥ –ú–æ—Ä–æ–∑ v\d+\.\d+\.\d+', content):
            # –ï—Å–ª–∏ –∑–∞–≥–æ–ª–æ–≤–æ–∫ –±–µ–∑ –≤–µ—Ä—Å–∏–∏, –¥–æ–±–∞–≤–ª—è–µ–º –≤–µ—Ä—Å–∏—é
            content = content.replace('# üéÖ –ê–Ω–æ–Ω–∏–º–Ω—ã–π –î–µ–¥ –ú–æ—Ä–æ–∑', f'# üéÖ –ê–Ω–æ–Ω–∏–º–Ω—ã–π –î–µ–¥ –ú–æ—Ä–æ–∑ v{version}')
        readme_path.write_text(content, encoding='utf-8')
        print(f"–û–±–Ω–æ–≤–ª–µ–Ω README.md –¥–æ –≤–µ—Ä—Å–∏–∏ {version}")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    if len(sys.argv) > 1 and sys.argv[1] == "increment":
        # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –≤–µ—Ä—Å–∏—é
        new_version = increment_version()
        print(f"–í–µ—Ä—Å–∏—è —É–≤–µ–ª–∏—á–µ–Ω–∞ –¥–æ: {new_version}")
        
        # –û–±–Ω–æ–≤–ª—è–µ–º –≤—Å–µ —Ñ–∞–π–ª—ã
        update_package_json(new_version)
        update_backend_version(new_version)
        update_readme_version(new_version)
        
        print(f"–í—Å–µ —Ñ–∞–π–ª—ã –æ–±–Ω–æ–≤–ª–µ–Ω—ã –¥–æ –≤–µ—Ä—Å–∏–∏ {new_version}")
        
        # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –¥–µ–ø–ª–æ–∏–º –≤ GitHub
        print("\n–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –¥–µ–ø–ª–æ–π –≤ GitHub...")
        import subprocess
        try:
            result = subprocess.run([sys.executable, "deploy.py"], capture_output=True, text=True)
            if result.returncode == 0:
                print("–î–µ–ø–ª–æ–π –≤ GitHub –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
                print("–†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π: https://github.com/Kolunt/adm-gw")
            else:
                print(f"‚ö†Ô∏è –î–µ–ø–ª–æ–π –∑–∞–≤–µ—Ä—à–µ–Ω —Å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è–º–∏: {result.stderr}")
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–µ–ø–ª–æ–µ: {e}")
            print("–í—ã–ø–æ–ª–Ω–∏—Ç–µ –¥–µ–ø–ª–æ–π –≤—Ä—É—á–Ω—É—é: python deploy.py")
    else:
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–µ–∫—É—â—É—é –≤–µ—Ä—Å–∏—é
        current_version = get_version()
        print(f"–¢–µ–∫—É—â–∞—è –≤–µ—Ä—Å–∏—è: {current_version}")
        print("\n–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:")
        print("  python version.py          - –ø–æ–∫–∞–∑–∞—Ç—å —Ç–µ–∫—É—â—É—é –≤–µ—Ä—Å–∏—é")
        print("  python version.py increment - —É–≤–µ–ª–∏—á–∏—Ç—å –≤–µ—Ä—Å–∏—é –Ω–∞ 1 –∏ –∑–∞–¥–µ–ø–ª–æ–∏—Ç—å –≤ GitHub")

if __name__ == "__main__":
    main()
