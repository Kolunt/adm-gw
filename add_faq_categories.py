#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç–∞–±–ª–∏—Ü—ã –∫–∞—Ç–µ–≥–æ—Ä–∏–π FAQ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
"""

from sqlalchemy import create_engine, text
from sqlalchemy.orm import sessionmaker
from backend.main import Base, FAQCategory
import os

# Database setup
SQLALCHEMY_DATABASE_URL = "sqlite:///./santa.db"
engine = create_engine(SQLALCHEMY_DATABASE_URL, connect_args={"check_same_thread": False})
SessionLocal = sessionmaker(autocommit=False, autoflush=False, bind=engine)

def add_faq_categories_table():
    """–î–æ–±–∞–≤–ª—è–µ—Ç —Ç–∞–±–ª–∏—Ü—É faq_categories –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö"""
    try:
        # –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É –∫–∞—Ç–µ–≥–æ—Ä–∏–π FAQ
        Base.metadata.create_all(bind=engine, tables=[FAQCategory.__table__])
        print("‚úÖ –¢–∞–±–ª–∏—Ü–∞ faq_categories —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞")
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–ª–æ–Ω–∫—É category_id –≤ —Ç–∞–±–ª–∏—Ü—É faq, –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
        with engine.connect() as conn:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –∫–æ–ª–æ–Ω–∫–∞ category_id
            result = conn.execute(text("PRAGMA table_info(faq)"))
            columns = [row[1] for row in result.fetchall()]
            
            if 'category_id' not in columns:
                conn.execute(text("ALTER TABLE faq ADD COLUMN category_id INTEGER REFERENCES faq_categories(id)"))
                print("‚úÖ –ö–æ–ª–æ–Ω–∫–∞ category_id –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ —Ç–∞–±–ª–∏—Ü—É faq")
            else:
                print("‚ÑπÔ∏è –ö–æ–ª–æ–Ω–∫–∞ category_id —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ —Ç–∞–±–ª–∏—Ü–µ faq")
        
        # –°–æ–∑–¥–∞–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ –±–∞–∑–æ–≤—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π
        session = SessionLocal()
        try:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
            existing_categories = session.query(FAQCategory).count()
            if existing_categories == 0:
                # –°–æ–∑–¥–∞–µ–º –±–∞–∑–æ–≤—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
                categories = [
                    FAQCategory(
                        name="–û–±—â–∏–µ –≤–æ–ø—Ä–æ—Å—ã",
                        description="–û–±—â–∏–µ –≤–æ–ø—Ä–æ—Å—ã –æ —Å–∏—Å—Ç–µ–º–µ –∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏",
                        order=1,
                        is_active=True
                    ),
                    FAQCategory(
                        name="GWars –ø—Ä–æ—Ñ–∏–ª—å",
                        description="–í–æ–ø—Ä–æ—Å—ã –æ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏ GWars –ø—Ä–æ—Ñ–∏–ª—è",
                        order=2,
                        is_active=True
                    ),
                    FAQCategory(
                        name="–ú–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è",
                        description="–í–æ–ø—Ä–æ—Å—ã –æ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è—Ö –∏ —É—á–∞—Å—Ç–∏–∏",
                        order=3,
                        is_active=True
                    ),
                    FAQCategory(
                        name="–ü–æ–¥–∞—Ä–∫–∏",
                        description="–í–æ–ø—Ä–æ—Å—ã –æ —Å–∏—Å—Ç–µ–º–µ –ø–æ–¥–∞—Ä–∫–æ–≤",
                        order=4,
                        is_active=True
                    )
                ]
                
                for category in categories:
                    session.add(category)
                
                session.commit()
                print("‚úÖ –ë–∞–∑–æ–≤—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ FAQ —Å–æ–∑–¥–∞–Ω—ã")
            else:
                print(f"‚ÑπÔ∏è –í –±–∞–∑–µ —É–∂–µ –µ—Å—Ç—å {existing_categories} –∫–∞—Ç–µ–≥–æ—Ä–∏–π")
                
        except Exception as e:
            session.rollback()
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–π: {e}")
        finally:
            session.close()
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Ç–∞–±–ª–∏—Ü—ã: {e}")

if __name__ == "__main__":
    print("üöÄ –ù–∞—á–∏–Ω–∞–µ–º –º–∏–≥—Ä–∞—Ü–∏—é –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–π FAQ...")
    add_faq_categories_table()
    print("‚úÖ –ú–∏–≥—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
