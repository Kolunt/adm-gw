import requests
from datetime import datetime, timedelta

def test_event_registration():
    print("=== –¢–µ—Å—Ç —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –Ω–∞ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è ===")
    
    BASE_URL = 'http://localhost:8004'
    
    # 1. –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    print("\n1. –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...")
    email = f'test_user_{datetime.now().strftime("%Y%m%d_%H%M%S")}@example.com'
    password = 'password123'
    
    register_data = {
        'email': email,
        'password': password,
        'confirm_password': password
    }
    
    response = requests.post(f'{BASE_URL}/auth/register', json=register_data)
    if response.status_code != 200:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: {response.text}")
        return False
    
    user_data = response.json()
    print(f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ–∑–¥–∞–Ω: {user_data['email']}")
    
    # 2. –õ–æ–≥–∏–Ω–∏–º—Å—è –∫–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
    print("\n2. –í—Ö–æ–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...")
    login_data = {'email': email, 'password': password}
    response = requests.post(f'{BASE_URL}/auth/login', json=login_data)
    
    if response.status_code != 200:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞: {response.text}")
        return False
    
    user_token = response.json()['access_token']
    user_headers = {'Authorization': f'Bearer {user_token}'}
    print("‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω")
    
    # 3. –ó–∞–ø–æ–ª–Ω—è–µ–º –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    print("\n3. –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è...")
    
    # –®–∞–≥ 1: GWars –ø—Ä–æ—Ñ–∏–ª—å
    step1_data = {'gwars_profile_url': 'https://www.gwars.io/info.php?id=12345'}
    response = requests.post(f'{BASE_URL}/profile/step1', json=step1_data, headers=user_headers)
    if response.status_code != 200:
        print(f"‚ùå –û—à–∏–±–∫–∞ —à–∞–≥–∞ 1: {response.text}")
        return False
    
    # –®–∞–≥ 2: –õ–∏—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
    step2_data = {
        'full_name': '–¢–µ—Å—Ç–æ–≤—ã–π –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å',
        'address': '–≥. –ú–æ—Å–∫–≤–∞, —É–ª. –¢–µ—Å—Ç–æ–≤–∞—è, –¥. 1, –∫–≤. 1'
    }
    response = requests.post(f'{BASE_URL}/profile/step2', json=step2_data, headers=user_headers)
    if response.status_code != 200:
        print(f"‚ùå –û—à–∏–±–∫–∞ —à–∞–≥–∞ 2: {response.text}")
        return False
    
    # –®–∞–≥ 3: –ò–Ω—Ç–µ—Ä–µ—Å—ã
    step3_data = {'interests': '–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã'}
    response = requests.post(f'{BASE_URL}/profile/step3', json=step3_data, headers=user_headers)
    if response.status_code != 200:
        print(f"‚ùå –û—à–∏–±–∫–∞ —à–∞–≥–∞ 3: {response.text}")
        return False
    
    print("‚úÖ –ü—Ä–æ—Ñ–∏–ª—å –∑–∞–ø–æ–ª–Ω–µ–Ω")
    
    # 4. –õ–æ–≥–∏–Ω–∏–º—Å—è –∫–∞–∫ –∞–¥–º–∏–Ω –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è
    print("\n4. –°–æ–∑–¥–∞–Ω–∏–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º...")
    admin_login_data = {'email': 'admin@example.com', 'password': 'admin'}
    response = requests.post(f'{BASE_URL}/auth/login', json=admin_login_data)
    
    if response.status_code != 200:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞ –∞–¥–º–∏–Ω–∞: {response.text}")
        return False
    
    admin_token = response.json()['access_token']
    admin_headers = {'Authorization': f'Bearer {admin_token}'}
    
    # –°–æ–∑–¥–∞–µ–º –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ
    now = datetime.now()
    event_data = {
        'name': f'–¢–µ—Å—Ç–æ–≤–æ–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ {now.strftime("%Y-%m-%d %H:%M")}',
        'description': '–¢–µ—Å—Ç–æ–≤–æ–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏',
        'preregistration_start': (now + timedelta(minutes=1)).isoformat(),
        'registration_start': (now + timedelta(minutes=2)).isoformat(),
        'registration_end': (now + timedelta(minutes=5)).isoformat()
    }
    
    response = requests.post(f'{BASE_URL}/events/', json=event_data, headers=admin_headers)
    if response.status_code != 200:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è: {response.text}")
        return False
    
    event = response.json()
    print(f"‚úÖ –ú–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ —Å–æ–∑–¥–∞–Ω–æ: {event['name']} (ID: {event['id']})")
    
    # 5. –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –Ω–∞ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ
    print("\n5. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –Ω–∞ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ...")
    
    # –ü—ã—Ç–∞–µ–º—Å—è –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è –¥–æ –Ω–∞—á–∞–ª–∞ –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ–π —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
    print("   - –ü–æ–ø—ã—Ç–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –¥–æ –Ω–∞—á–∞–ª–∞ –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ–π —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏...")
    registration_data = {
        'event_id': event['id'],
        'registration_type': 'preregistration'
    }
    response = requests.post(f'{BASE_URL}/events/{event["id"]}/register', json=registration_data, headers=user_headers)
    if response.status_code == 400 and "–µ—â–µ –Ω–µ –Ω–∞—á–∞–ª–∞—Å—å" in response.text:
        print("   ‚úÖ –ö–æ—Ä—Ä–µ–∫—Ç–Ω–æ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –¥–æ –Ω–∞—á–∞–ª–∞ –ø–µ—Ä–∏–æ–¥–∞")
    else:
        print(f"   ‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç: {response.status_code} - {response.text}")
    
    # –ñ–¥–µ–º –Ω–∞—á–∞–ª–∞ –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ–π —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
    print("   - –û–∂–∏–¥–∞–Ω–∏–µ –Ω–∞—á–∞–ª–∞ –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ–π —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏...")
    import time
    time.sleep(70)  # –ñ–¥–µ–º 70 —Å–µ–∫—É–Ω–¥
    
    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º—Å—è –Ω–∞ –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—É—é —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é
    print("   - –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –Ω–∞ –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—É—é —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é...")
    response = requests.post(f'{BASE_URL}/events/{event["id"]}/register', json=registration_data, headers=user_headers)
    if response.status_code == 200:
        registration = response.json()
        print(f"   ‚úÖ –ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–∞—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞ (ID: {registration['id']})")
        print(f"   ‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–æ: {registration['is_confirmed']}")
    else:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ–π —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: {response.text}")
        return False
    
    # –ñ–¥–µ–º –Ω–∞—á–∞–ª–∞ –æ—Å–Ω–æ–≤–Ω–æ–π —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
    print("   - –û–∂–∏–¥–∞–Ω–∏–µ –Ω–∞—á–∞–ª–∞ –æ—Å–Ω–æ–≤–Ω–æ–π —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏...")
    time.sleep(70)  # –ñ–¥–µ–º –µ—â–µ 70 —Å–µ–∫—É–Ω–¥
    
    # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ–º —É—á–∞—Å—Ç–∏–µ
    print("   - –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —É—á–∞—Å—Ç–∏—è...")
    confirm_data = {
        'confirmed_address': '–≥. –ú–æ—Å–∫–≤–∞, —É–ª. –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–Ω–∞—è, –¥. 2, –∫–≤. 2'
    }
    response = requests.post(f'{BASE_URL}/events/{event["id"]}/confirm', json=confirm_data, headers=user_headers)
    if response.status_code == 200:
        confirmed_registration = response.json()
        print(f"   ‚úÖ –£—á–∞—Å—Ç–∏–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–æ")
        print(f"   ‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–Ω—ã–π –∞–¥—Ä–µ—Å: {confirmed_registration['confirmed_address']}")
    else:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è: {response.text}")
        return False
    
    # 6. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    print("\n6. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...")
    response = requests.get(f'{BASE_URL}/user/registrations', headers=user_headers)
    if response.status_code == 200:
        registrations = response.json()
        print(f"   ‚úÖ –ù–∞–π–¥–µ–Ω–æ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–π: {len(registrations)}")
        for reg in registrations:
            print(f"   - –ú–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ {reg['event_id']}: {reg['registration_type']}, –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–æ: {reg['is_confirmed']}")
    else:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–π: {response.text}")
    
    print("\nüéâ –í—Å–µ —Ç–µ—Å—Ç—ã —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –Ω–∞ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ!")
    return True

if __name__ == "__main__":
    try:
        success = test_event_registration()
        if not success:
            print("\n‚ùå –¢–µ—Å—Ç—ã –Ω–µ –ø—Ä–æ—à–ª–∏")
    except Exception as e:
        print(f"\nüí• –û—à–∏–±–∫–∞: {e}")
